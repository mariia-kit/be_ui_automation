/*
 * HERE Consent Management API v1
 * HERE Consent Management REST API. More details can be found here: https://confluence.in.here.com/display/OLP/Neutral+Server+Consent+Management
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.here.platform.cm.rest.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ConsentInfo
 */

public class ConsentInfo {
  @JsonProperty("additionalLinks")
  private List<AdditionalLink> additionalLinks = null;

  @JsonProperty("approveTime")
  private LocalDateTime approveTime;

  @JsonProperty("consentRequestId")
  private String consentRequestId;

  @JsonProperty("consumerId")
  private String consumerId;

  @JsonProperty("consumerName")
  private String consumerName;

  @JsonProperty("containerDescription")
  private String containerDescription;

  @JsonProperty("containerId")
  private String containerId;

  @JsonProperty("containerName")
  private String containerName;

  @JsonProperty("createTime")
  private LocalDateTime createTime;

  @JsonProperty("expiredTime")
  private LocalDateTime expiredTime;

  @JsonProperty("privacyPolicy")
  private String privacyPolicy;

  @JsonProperty("purpose")
  private String purpose;

  @JsonProperty("resources")
  private List<String> resources = null;

  @JsonProperty("revokeTime")
  private LocalDateTime revokeTime;

  /**
   * State of consent
   */
  public enum StateEnum {
    APPROVED("APPROVED"),
    
    REVOKED("REVOKED"),
    
    REJECTED("REJECTED"),
    
    PENDING("PENDING"),
    
    EXPIRED("EXPIRED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }
  }

  @JsonProperty("state")
  private StateEnum state;

  @JsonProperty("title")
  private String title;

  @JsonProperty("vinHash")
  private String vinHash;

  @JsonProperty("vinLabel")
  private String vinLabel;

  public ConsentInfo additionalLinks(List<AdditionalLink> additionalLinks) {
    this.additionalLinks = additionalLinks;
    return this;
  }

  public ConsentInfo addAdditionalLinksItem(AdditionalLink additionalLinksItem) {
    if (this.additionalLinks == null) {
      this.additionalLinks = new ArrayList<>();
    }
    this.additionalLinks.add(additionalLinksItem);
    return this;
  }

   /**
   * Additional links provided by consumer for consent request
   * @return additionalLinks
  **/
  @ApiModelProperty(value = "Additional links provided by consumer for consent request")
  public List<AdditionalLink> getAdditionalLinks() {
    return additionalLinks;
  }

  public void setAdditionalLinks(List<AdditionalLink> additionalLinks) {
    this.additionalLinks = additionalLinks;
  }

  public ConsentInfo approveTime(LocalDateTime approveTime) {
    this.approveTime = approveTime;
    return this;
  }

   /**
   * Date and time when consent was approved
   * @return approveTime
  **/
  @ApiModelProperty(value = "Date and time when consent was approved")
  public LocalDateTime getApproveTime() {
    return approveTime;
  }

  public void setApproveTime(LocalDateTime approveTime) {
    this.approveTime = approveTime;
  }

  public ConsentInfo consentRequestId(String consentRequestId) {
    this.consentRequestId = consentRequestId;
    return this;
  }

   /**
   * ID of consent request
   * @return consentRequestId
  **/
  @ApiModelProperty(value = "ID of consent request")
  public String getConsentRequestId() {
    return consentRequestId;
  }

  public void setConsentRequestId(String consentRequestId) {
    this.consentRequestId = consentRequestId;
  }

  public ConsentInfo consumerId(String consumerId) {
    this.consumerId = consumerId;
    return this;
  }

   /**
   * ID of the consumer
   * @return consumerId
  **/
  @ApiModelProperty(value = "ID of the consumer")
  public String getConsumerId() {
    return consumerId;
  }

  public void setConsumerId(String consumerId) {
    this.consumerId = consumerId;
  }

  public ConsentInfo consumerName(String consumerName) {
    this.consumerName = consumerName;
    return this;
  }

   /**
   * Consumer name on Marketplace
   * @return consumerName
  **/
  @ApiModelProperty(example = "Ensure", value = "Consumer name on Marketplace")
  public String getConsumerName() {
    return consumerName;
  }

  public void setConsumerName(String consumerName) {
    this.consumerName = consumerName;
  }

  public ConsentInfo containerDescription(String containerDescription) {
    this.containerDescription = containerDescription;
    return this;
  }

   /**
   * Description of the container
   * @return containerDescription
  **/
  @ApiModelProperty(value = "Description of the container")
  public String getContainerDescription() {
    return containerDescription;
  }

  public void setContainerDescription(String containerDescription) {
    this.containerDescription = containerDescription;
  }

  public ConsentInfo containerId(String containerId) {
    this.containerId = containerId;
    return this;
  }

   /**
   * ID of the container
   * @return containerId
  **/
  @ApiModelProperty(value = "ID of the container")
  public String getContainerId() {
    return containerId;
  }

  public void setContainerId(String containerId) {
    this.containerId = containerId;
  }

  public ConsentInfo containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * Name of the container
   * @return containerName
  **/
  @ApiModelProperty(value = "Name of the container")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public ConsentInfo createTime(LocalDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Date and time when consent was created
   * @return createTime
  **/
  @ApiModelProperty(value = "Date and time when consent was created")
  public LocalDateTime getCreateTime() {
    return createTime;
  }

  public void setCreateTime(LocalDateTime createTime) {
    this.createTime = createTime;
  }

  public ConsentInfo expiredTime(LocalDateTime expiredTime) {
    this.expiredTime = expiredTime;
    return this;
  }

   /**
   * Date and time when consent was revoked
   * @return expiredTime
  **/
  @ApiModelProperty(value = "Date and time when consent was revoked")
  public LocalDateTime getExpiredTime() {
    return expiredTime;
  }

  public void setExpiredTime(LocalDateTime expiredTime) {
    this.expiredTime = expiredTime;
  }

  public ConsentInfo privacyPolicy(String privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
    return this;
  }

   /**
   * Link to privacy policy provided by consumer for consent request
   * @return privacyPolicy
  **/
  @ApiModelProperty(value = "Link to privacy policy provided by consumer for consent request")
  public String getPrivacyPolicy() {
    return privacyPolicy;
  }

  public void setPrivacyPolicy(String privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
  }

  public ConsentInfo purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Description provided by consumer for consent request
   * @return purpose
  **/
  @ApiModelProperty(value = "Description provided by consumer for consent request")
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  public ConsentInfo resources(List<String> resources) {
    this.resources = resources;
    return this;
  }

  public ConsentInfo addResourcesItem(String resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Collection of container resources
   * @return resources
  **/
  @ApiModelProperty(value = "Collection of container resources")
  public List<String> getResources() {
    return resources;
  }

  public void setResources(List<String> resources) {
    this.resources = resources;
  }

  public ConsentInfo revokeTime(LocalDateTime revokeTime) {
    this.revokeTime = revokeTime;
    return this;
  }

   /**
   * Date and time when consent was revoked
   * @return revokeTime
  **/
  @ApiModelProperty(value = "Date and time when consent was revoked")
  public LocalDateTime getRevokeTime() {
    return revokeTime;
  }

  public void setRevokeTime(LocalDateTime revokeTime) {
    this.revokeTime = revokeTime;
  }

  public ConsentInfo state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * State of consent
   * @return state
  **/
  @ApiModelProperty(example = "PENDING", value = "State of consent")
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }

  public ConsentInfo title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title provided by consumer for consent request
   * @return title
  **/
  @ApiModelProperty(value = "Title provided by consumer for consent request")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ConsentInfo vinHash(String vinHash) {
    this.vinHash = vinHash;
    return this;
  }

   /**
   * Hashed VIN value
   * @return vinHash
  **/
  @ApiModelProperty(value = "Hashed VIN value")
  public String getVinHash() {
    return vinHash;
  }

  public void setVinHash(String vinHash) {
    this.vinHash = vinHash;
  }

  public ConsentInfo vinLabel(String vinLabel) {
    this.vinLabel = vinLabel;
    return this;
  }

   /**
   * Last 8 characters of VIN
   * @return vinLabel
  **/
  @ApiModelProperty(value = "Last 8 characters of VIN")
  public String getVinLabel() {
    return vinLabel;
  }

  public void setVinLabel(String vinLabel) {
    this.vinLabel = vinLabel;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsentInfo consentInfo = (ConsentInfo) o;
    return Objects.equals(this.additionalLinks, consentInfo.additionalLinks) &&
        Objects.equals(this.approveTime, consentInfo.approveTime) &&
        Objects.equals(this.consentRequestId, consentInfo.consentRequestId) &&
        Objects.equals(this.consumerId, consentInfo.consumerId) &&
        Objects.equals(this.consumerName, consentInfo.consumerName) &&
        Objects.equals(this.containerDescription, consentInfo.containerDescription) &&
        Objects.equals(this.containerId, consentInfo.containerId) &&
        Objects.equals(this.containerName, consentInfo.containerName) &&
        Objects.equals(this.createTime, consentInfo.createTime) &&
        Objects.equals(this.expiredTime, consentInfo.expiredTime) &&
        Objects.equals(this.privacyPolicy, consentInfo.privacyPolicy) &&
        Objects.equals(this.purpose, consentInfo.purpose) &&
        Objects.equals(this.resources, consentInfo.resources) &&
        Objects.equals(this.revokeTime, consentInfo.revokeTime) &&
        Objects.equals(this.state, consentInfo.state) &&
        Objects.equals(this.title, consentInfo.title) &&
        Objects.equals(this.vinHash, consentInfo.vinHash) &&
        Objects.equals(this.vinLabel, consentInfo.vinLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalLinks, approveTime, consentRequestId, consumerId, consumerName, containerDescription, containerId, containerName, createTime, expiredTime, privacyPolicy, purpose, resources, revokeTime, state, title, vinHash, vinLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsentInfo {\n");
    
    sb.append("    additionalLinks: ").append(toIndentedString(additionalLinks)).append("\n");
    sb.append("    approveTime: ").append(toIndentedString(approveTime)).append("\n");
    sb.append("    consentRequestId: ").append(toIndentedString(consentRequestId)).append("\n");
    sb.append("    consumerId: ").append(toIndentedString(consumerId)).append("\n");
    sb.append("    consumerName: ").append(toIndentedString(consumerName)).append("\n");
    sb.append("    containerDescription: ").append(toIndentedString(containerDescription)).append("\n");
    sb.append("    containerId: ").append(toIndentedString(containerId)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    expiredTime: ").append(toIndentedString(expiredTime)).append("\n");
    sb.append("    privacyPolicy: ").append(toIndentedString(privacyPolicy)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    revokeTime: ").append(toIndentedString(revokeTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    vinHash: ").append(toIndentedString(vinHash)).append("\n");
    sb.append("    vinLabel: ").append(toIndentedString(vinLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

