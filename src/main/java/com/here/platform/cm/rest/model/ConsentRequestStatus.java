/*
 * HERE Consent Management API v1
 * HERE Consent Management REST API. More details can be found here: https://confluence.in.here.com/display/OLP/Neutral+Server+Consent+Management
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.here.platform.cm.rest.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.Objects;


/**
 * ConsentRequestStatus
 */

public class ConsentRequestStatus {
  @JsonProperty("approved")
  private Integer approved;

  @JsonProperty("expired")
  private Integer expired;

  @JsonProperty("pending")
  private Integer pending;

  @JsonProperty("rejected")
  private Integer rejected;

  @JsonProperty("revoked")
  private Integer revoked;

  public ConsentRequestStatus approved(Integer approved) {
    this.approved = approved;
    return this;
  }

   /**
   * Amount of approved VIN&#39;s
   * @return approved
  **/
  @ApiModelProperty(value = "Amount of approved VIN's")
  public Integer getApproved() {
    return approved;
  }

  public void setApproved(Integer approved) {
    this.approved = approved;
  }

  public ConsentRequestStatus expired(Integer expired) {
    this.expired = expired;
    return this;
  }

   /**
   * Amount of expired VIN&#39;s
   * @return expired
  **/
  @ApiModelProperty(value = "Amount of expired VIN's")
  public Integer getExpired() {
    return expired;
  }

  public void setExpired(Integer expired) {
    this.expired = expired;
  }

  public ConsentRequestStatus pending(Integer pending) {
    this.pending = pending;
    return this;
  }

   /**
   * Amount of VIN&#39;s in pending state
   * @return pending
  **/
  @ApiModelProperty(value = "Amount of VIN's in pending state")
  public Integer getPending() {
    return pending;
  }

  public void setPending(Integer pending) {
    this.pending = pending;
  }

  public ConsentRequestStatus rejected(Integer rejected) {
    this.rejected = rejected;
    return this;
  }

   /**
   * Amount of rejected VIN&#39;s
   * @return rejected
  **/
  @ApiModelProperty(value = "Amount of rejected VIN's")
  public Integer getRejected() {
    return rejected;
  }

  public void setRejected(Integer rejected) {
    this.rejected = rejected;
  }

  public ConsentRequestStatus revoked(Integer revoked) {
    this.revoked = revoked;
    return this;
  }

   /**
   * Amount of revoked VIN&#39;s
   * @return revoked
  **/
  @ApiModelProperty(value = "Amount of revoked VIN's")
  public Integer getRevoked() {
    return revoked;
  }

  public void setRevoked(Integer revoked) {
    this.revoked = revoked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsentRequestStatus consentRequestStatus = (ConsentRequestStatus) o;
    return Objects.equals(this.approved, consentRequestStatus.approved) &&
        Objects.equals(this.expired, consentRequestStatus.expired) &&
        Objects.equals(this.pending, consentRequestStatus.pending) &&
        Objects.equals(this.rejected, consentRequestStatus.rejected) &&
        Objects.equals(this.revoked, consentRequestStatus.revoked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approved, expired, pending, rejected, revoked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsentRequestStatus {\n");
    
    sb.append("    approved: ").append(toIndentedString(approved)).append("\n");
    sb.append("    expired: ").append(toIndentedString(expired)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    rejected: ").append(toIndentedString(rejected)).append("\n");
    sb.append("    revoked: ").append(toIndentedString(revoked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

