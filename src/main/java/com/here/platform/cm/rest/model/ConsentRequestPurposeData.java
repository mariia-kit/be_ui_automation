/*
 * HERE Consent Management API v1
 * HERE Consent Management REST API. More details can be found here: https://confluence.in.here.com/display/OLP/Neutral+Server+Consent+Management
 *
 * OpenAPI spec version: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.here.platform.cm.rest.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * ConsentRequestPurposeData
 */

public class ConsentRequestPurposeData {
  @JsonProperty("consumer_name")
  private String consumerName;

  @JsonProperty("container_description")
  private String containerDescription;

  @JsonProperty("container_name")
  private String containerName;

  @JsonProperty("privacy_policy")
  private String privacyPolicy;

  @JsonProperty("purpose")
  private String purpose;

  @JsonProperty("resources")
  private List<String> resources = null;

  @JsonProperty("title")
  private String title;

  public ConsentRequestPurposeData consumerName(String consumerName) {
    this.consumerName = consumerName;
    return this;
  }

   /**
   * Get consumerName
   * @return consumerName
  **/
  @ApiModelProperty(value = "")
  public String getConsumerName() {
    return consumerName;
  }

  public void setConsumerName(String consumerName) {
    this.consumerName = consumerName;
  }

  public ConsentRequestPurposeData containerDescription(String containerDescription) {
    this.containerDescription = containerDescription;
    return this;
  }

   /**
   * Get containerDescription
   * @return containerDescription
  **/
  @ApiModelProperty(value = "")
  public String getContainerDescription() {
    return containerDescription;
  }

  public void setContainerDescription(String containerDescription) {
    this.containerDescription = containerDescription;
  }

  public ConsentRequestPurposeData containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * Get containerName
   * @return containerName
  **/
  @ApiModelProperty(value = "")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public ConsentRequestPurposeData privacyPolicy(String privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
    return this;
  }

   /**
   * Get privacyPolicy
   * @return privacyPolicy
  **/
  @ApiModelProperty(value = "")
  public String getPrivacyPolicy() {
    return privacyPolicy;
  }

  public void setPrivacyPolicy(String privacyPolicy) {
    this.privacyPolicy = privacyPolicy;
  }

  public ConsentRequestPurposeData purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Get purpose
   * @return purpose
  **/
  @ApiModelProperty(value = "")
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  public ConsentRequestPurposeData resources(List<String> resources) {
    this.resources = resources;
    return this;
  }

  public ConsentRequestPurposeData addResourcesItem(String resourcesItem) {
    if (this.resources == null) {
      this.resources = new ArrayList<>();
    }
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @ApiModelProperty(value = "")
  public List<String> getResources() {
    return resources;
  }

  public void setResources(List<String> resources) {
    this.resources = resources;
  }

  public ConsentRequestPurposeData title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConsentRequestPurposeData consentRequestPurposeData = (ConsentRequestPurposeData) o;
    return Objects.equals(this.consumerName, consentRequestPurposeData.consumerName) &&
        Objects.equals(this.containerDescription, consentRequestPurposeData.containerDescription) &&
        Objects.equals(this.containerName, consentRequestPurposeData.containerName) &&
        Objects.equals(this.privacyPolicy, consentRequestPurposeData.privacyPolicy) &&
        Objects.equals(this.purpose, consentRequestPurposeData.purpose) &&
        Objects.equals(this.resources, consentRequestPurposeData.resources) &&
        Objects.equals(this.title, consentRequestPurposeData.title);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerName, containerDescription, containerName, privacyPolicy, purpose, resources, title);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConsentRequestPurposeData {\n");
    
    sb.append("    consumerName: ").append(toIndentedString(consumerName)).append("\n");
    sb.append("    containerDescription: ").append(toIndentedString(containerDescription)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    privacyPolicy: ").append(toIndentedString(privacyPolicy)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

