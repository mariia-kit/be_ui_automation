image: gradle:6.3-jdk11
services:
   - docker:19.03.0-dind


variables:
  ENV: "dev"
  #TASK_CM: "smokeCMTests"
  #TASK_NS: "nsTestsSmoke"
  CYCLE: "latest"
  #SPARK_URL: "https://outlook.office.com/webhook/6371821a-7221-4e98-bfaa-a6f309aa9fe6@8a68f26d-b270-4ef3-ae78-bd695a909445/IncomingWebhook/1bdcdbaeb9c648758f7a9676a239dfb5/d45cc121-c9d1-44d9-893d-51382613cf7a"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""


cache:
  key: one-key-to-rule-them-all
  paths:
    - history_cm/
    - history_ns/

stages:
  - test
  - test_dev
  - test_sit
  - test_prod
  - instrumental
  - pages

.test_run:
  stage: test
  variables:
    TASK: "smoke"
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"
  script:
    - chown gradle:gradle ./ -R
    - echo "gradle $TASK -Penv=$ENV"
    - gradle $TASK -Penv=$ENV
    - gradle --stop
  after_script:
    - mkdir -p "/${REPORT_URL}"
    - cp -TRv build/reports/allure-report/ "${REPORT_URL}/"
  artifacts:
    name: "Report"
    paths:
      - index.html
      - "${HISTORY_URL}/"
      - "${REPORT_URL}/"
      - build/allure-results/
    when: always
    expire_in: 1 week
  allow_failure: false


.push_allure_reports:
  variables:
    FILE1: "build/reports_cm/data/suites.csv"
    FILE2: "build/reports_cm/widgets/summary.json"
    TO: "https://confluence.in.here.com/rest/api/content/790072147/child/attachment"
  script:
    - 'curl -D- -u svc-ns-bot:HtSUxXwdb2aoVfkLfvAoMbPV  -X POST -H "X-Atlassian-Token: no-check" -F "file=@$FILE1;minorEdit=true;comment=Latest Report" $TO'
    - 'curl -D- -u svc-ns-bot:HtSUxXwdb2aoVfkLfvAoMbPV  -X POST -H "X-Atlassian-Token: no-check" -F "file=@$FILE2;minorEdit=true;comment=Latest Report" $TO'
  allow_failure: true

test_ns_auto:
  extends: .test_run
  rules:
    - if: $TASK_NS
  variables:
    TASK: $TASK_NS
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"

test_cm_auto:
  extends: .test_run
  rules:
    - if: $TASK_CM
  variables:
    TASK: $TASK_CM
    REPORT_URL: "build/reports_cm"
    HISTORY_URL: "history_cm"

#dev operations
test_ns_smoke_dev:
  extends: .test_run
  stage: test_dev
  variables:
    ENV: "dev"
    TASK: "nsTestsSmoke"
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"
  when: manual
  allow_failure: true

test_cm_smoke_dev:
  extends: .test_run
  stage: test_dev
  variables:
    ENV: "dev"
    TASK: "smokeCMTests"
    REPORT_URL: "build/reports_cm"
    HISTORY_URL: "history_cm"
  when: manual
  allow_failure: true

test_ns_regression_dev:
  extends: .test_run
  stage: test_dev
  variables:
    ENV: "dev"
    TASK: "nsTestRegression"
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"
  when: manual
  allow_failure: true

test_cm_regression_dev:
  extends: .test_run
  stage: test_dev
  variables:
    ENV: "dev"
    TASK: "devTests"
    REPORT_URL: "build/reports_cm"
    HISTORY_URL: "history_cm"
  when: manual
  allow_failure: true

test_e2e_dev:
  extends: .test_run
  stage: test_dev
  variables:
    ENV: "dev"
    TASK: "e2eTests"
    REPORT_URL: "build/reports_e2e"
    HISTORY_URL: "history_e2e"
  when: manual
  allow_failure: true

#sit operations
test_ns_smoke_sit:
  extends: .test_run
  stage: test_sit
  variables:
    ENV: "sit"
    TASK: "nsTestsSmoke"
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"
  when: manual
  allow_failure: true

test_cm_smoke_sit:
  extends: .test_run
  stage: test_sit
  variables:
    ENV: "sit"
    TASK: "smokeCMTests"
    REPORT_URL: "build/reports_cm"
    HISTORY_URL: "history_cm"
  when: manual
  allow_failure: true

test_ns_regression_sit:
  extends: .test_run
  stage: test_sit
  variables:
    ENV: "sit"
    TASK: "nsTestRegression"
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"
  when: manual
  allow_failure: true

test_cm_regression_sit:
  extends: .test_run
  stage: test_sit
  variables:
    ENV: "sit"
    TASK: "sitTests"
    REPORT_URL: "build/reports_cm"
    HISTORY_URL: "history_cm"
  when: manual
  allow_failure: true

test_e2e_sit:
  extends: .test_run
  stage: test_sit
  variables:
    ENV: "sit"
    TASK: "e2eTests"
    REPORT_URL: "build/reports_e2e"
    HISTORY_URL: "history_e2e"
  when: manual
  allow_failure: true

test_ns_prod:
  extends: .test_run
  stage: test_prod
  variables:
    ENV: "prod"
    TASK: "nsTestProd"
    REPORT_URL: "build/reports_ns"
    HISTORY_URL: "history_ns"
  when: manual
  allow_failure: true

#Instruments
zephyr_sync_ns:
  stage: instrumental
  dependencies:
    - test_ns_auto
    - test_ns_smoke_dev
    - test_ns_regression_dev
    - test_ns_smoke_sit
    - test_ns_regression_sit
  script:
    - chown gradle:gradle ./ -R
    - gradle zephyrSyncTaskNS -Penv=$ENV -Dtest_cycle=$CYCLE
    - gradle --stop
  when: manual
  allow_failure: true

zephyr_sync_cm:
  stage: instrumental
  dependencies:
    - test_cm_auto
  script:
    - chown gradle:gradle ./ -R
    - gradle zephyrCMSync -Penv=$ENV -Dtest_cycle=$CYCLE
    - gradle --stop
  when: manual
  allow_failure: true

push_allure_reports_cm:
  extends: .push_allure_reports
  stage: instrumental
  dependencies:
    - test_cm_auto
    - test_cm_smoke_dev
    - test_cm_regression_dev
    - test_cm_smoke_sit
    - test_cm_regression_sit
  variables:
    FILE1: "build/reports_cm/data/suites.csv"
    FILE2: "build/reports_cm/widgets/summary.json"
    TO: "https://confluence.in.here.com/rest/api/content/795780540/child/attachment"
  when: manual

push_allure_reports_ns:
  extends: .push_allure_reports
  stage: instrumental
  dependencies:
    - test_ns_auto
    - test_ns_smoke_dev
    - test_ns_regression_dev
    - test_ns_smoke_sit
    - test_ns_regression_sit
  variables:
    FILE1: "build/reports_ns/data/suites.csv"
    FILE2: "build/reports_ns/widgets/summary.json"
    TO: "https://confluence.in.here.com/rest/api/content/790072147/child/attachment"
  when: manual


pages:
  stage: pages
  when: always
  dependencies:
    - test_ns_auto
    - test_cm_auto
    - test_ns_smoke_dev
    - test_ns_regression_dev
    - test_cm_smoke_dev
    - test_cm_regression_dev
    - test_e2e_dev
    - test_ns_smoke_sit
    - test_ns_regression_sit
    - test_cm_smoke_sit
    - test_cm_regression_sit
    - test_e2e_sit
  script:
    - mkdir .public
    - cp -v index.html .public
    - if [ -d "build/reports_ns" ]; then
    - echo "copy NS report to pages"
    - mkdir -p .public/nsDeployReport
    - cp -TRv build/reports_ns/ .public/nsDeployReport/
    - fi
    - if [ -d "build/reports_cm" ]; then
    - echo "copy CM report to pages"
    - mkdir -p .public/cmDeployReport
    - cp -TRv build/reports_cm/ .public/cmDeployReport/
    - fi
    - if [ -d "build/reports_e2e" ]; then
    - echo "copy e2e report to pages"
    - mkdir -p .public/e2eDeployReport
    - cp -TRv build/reports_e2e/ .public/e2eDeployReport/
    - fi
    - mv .public public
  artifacts:
    paths:
      - public
    expire_in: 5 days